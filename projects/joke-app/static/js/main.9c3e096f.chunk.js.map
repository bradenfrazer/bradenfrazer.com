{"version":3,"sources":["components/Header.js","components/Status.js","components/Joke.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","onClick","getJoke","href","target","Status","id","style","color","statusColor","status","Joke","state","showPunchline","showPunchlineText","togglePunchline","setState","this","joke","punchline","React","Component","api_url","App","undefined","e","a","preventDefault","fetch","api_call","ok","json","jokedata","setup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAWeA,EATA,SAACC,GAAD,OAEd,sBAAKC,UAAU,SAAf,UACC,wBAAQA,UAAU,gBAAgBC,QAASF,EAAMG,QAAjD,mCACC,mBAAGC,KAAK,+CAA+CC,OAAO,SAA9D,+BCIYC,EARA,SAACN,GAAD,OAEd,8BACC,mBAAGO,GAAG,SAASC,MAAO,CAACC,MAAOT,EAAMU,aAApC,SAAoDV,EAAMW,YCwC7CC,E,4MA1CdC,MAAQ,CACPC,cAAe,EACfC,kBAAmB,kB,EAGpBC,gBAAkB,WACb,EAAKH,MAAMC,cACd,EAAKG,SAAS,CACbH,cAAe,EACfC,kBAAmB,mBAIpB,EAAKE,SAAS,CACbH,cAAe,EACfC,kBAAmB,oB,4CAItB,WACC,OAAO,8BAEPG,KAAKlB,MAAMmB,MAAQD,KAAKlB,MAAMoB,WAC9B,sBAAKnB,UAAU,cAAcM,GAAG,aAAhC,UACC,qBAAKN,UAAU,iBAAf,SACC,mBAAGM,GAAG,OAAN,SAAeW,KAAKlB,MAAMmB,SAE3B,yBAAQlB,UAAU,eAAeM,GAAG,eACpCL,QAAUgB,KAAKF,gBADf,cACqCE,KAAKL,MAAME,uBAE7CG,KAAKL,MAAMC,eACd,qBAAKb,UAAU,sBAAsBM,GAAG,qBAAxC,SACC,mBAAGA,GAAG,YAAN,SAAoBW,KAAKlB,MAAMoB,uB,GAjChBC,IAAMC,WCInBC,EAAU,oDAmDDC,E,4MAhDdX,MAAQ,CACPM,UAAMM,EACNL,eAAWK,EACXd,OAAQ,GACRD,YAAa,Q,EAEdP,Q,uCAAU,WAAOuB,GAAP,iBAAAC,EAAA,6DACT,EAAKV,SAAS,CACbN,OAAQ,UACRD,YAAa,SAEdgB,EAAEE,iBALO,SAMcC,MAAMN,GANpB,WAMHO,EANG,QAQKC,GARL,gBASR,EAAKd,SAAS,CACbE,UAAMM,EACNL,eAAWK,EACXd,OAAQ,wCACRD,YAAa,QAbN,wCAiBeoB,EAASE,OAjBxB,QAiBFC,EAjBE,OAkBR,EAAKhB,SAAS,CACbE,KAAMc,EAASC,MACfd,UAAWa,EAASb,UACpBT,OAAQ,KArBD,4C,kGAyBV,WACC,OACC,sBAAKV,UAAU,MAAf,UACC,cAAC,EAAD,CAAQE,QAASe,KAAKf,UACtB,cAAC,EAAD,CACAQ,OAAQO,KAAKL,MAAMF,OACnBD,YAAaQ,KAAKL,MAAMH,cAExB,cAAC,EAAD,CACAS,KAAMD,KAAKL,MAAMM,KACjBC,UAAWF,KAAKL,MAAMO,mB,GA1CRC,IAAMC,WCITa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c3e096f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => (\n\n\t<div className=\"topbar\">\n\t\t<button className=\"btn green-btn\" onClick={props.getJoke}>Get A New Random Joke</button>\n  \t<a href=\"https://github.com/15Dkatz/official_joke_api\" target=\"_blank\">View API Docs</a>\n\t</div>\n\n);\n\nexport default Header;\n","import React from 'react';\n\nconst Status = (props) => (\n\n\t<div>\n\t\t<p id=\"status\" style={{color: props.statusColor}}>{ props.status }</p>\n\t</div>\n\n);\n\nexport default Status;\n","import React from 'react';\n\nclass Joke extends React.Component {\n\tstate = {\n\t\tshowPunchline: 0,\n\t\tshowPunchlineText: \"Show Punchline\",\n\t}\n\t/* handle show/hide of the punchline */\n\ttogglePunchline = () => {\n\t\tif (this.state.showPunchline) {\n\t\t\tthis.setState({\n\t\t\t\tshowPunchline: 0,\n\t\t\t\tshowPunchlineText: \"Show Punchline\"\n\t\t\t});\n\t  }\n\t  else {\n\t\t\tthis.setState({\n\t\t\t\tshowPunchline: 1,\n\t\t\t\tshowPunchlineText: \"Hide Punchline\"\n\t\t\t});\n\t  }\n\t}\n\trender() {\n\t\treturn <div>\n\t\t{\n\t\tthis.props.joke && this.props.punchline &&\n\t\t<div className=\"joke-viewer\" id=\"jokeViewer\">\n\t\t\t<div className=\"joke-container\">\n\t\t\t\t<p id=\"joke\">{ this.props.joke }</p>\n\t\t\t\t</div>\n\t\t\t<button className=\"btn blue-btn\" id=\"toggleButton\"\n\t\t\tonClick={ this.togglePunchline } > { this.state.showPunchlineText }</button>\n\t\t\t{\n\t\t\t\t!!this.state.showPunchline &&\n\t\t\t<div className=\"punchline-container\" id=\"punchlineContainer\">\n\t\t\t\t<p id=\"punchline\">{ this.props.punchline }</p>\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t</div>\n\t}\n\t</div>\n\t}\n}\n\nexport default Joke;\n","import React from 'react';\n\nimport Header from \"./components/Header\";\nimport Status from \"./components/Status\";\nimport Joke from \"./components/Joke\";\n\nconst api_url = \"https://official-joke-api.appspot.com/random_joke\";\n\nclass App extends React.Component {\n\tstate = {\n\t\tjoke: undefined,\n\t\tpunchline: undefined,\n\t\tstatus: \"\",\n\t\tstatusColor: \"gray\"\n\t}\n\tgetJoke = async (e) => {\n\t\tthis.setState({\n\t\t\tstatus: \"Loading\",\n\t\t\tstatusColor: \"gray\"\n\t\t});\n\t\te.preventDefault();\n\t\tconst api_call = await fetch(api_url);\n\t\t//console.log(api_call.ok);\n\t\tif (!api_call.ok) {\n\t\t\tthis.setState({\n\t\t\t\tjoke: undefined,\n\t\t\t\tpunchline: undefined,\n\t\t\t\tstatus: \"There was an error loading your joke.\",\n\t\t\t\tstatusColor: \"red\"\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tconst jokedata = await api_call.json();\n\t\t\tthis.setState({\n\t\t\t\tjoke: jokedata.setup,\n\t\t\t\tpunchline: jokedata.punchline,\n\t\t\t\tstatus: \"\"\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header getJoke={this.getJoke}/>\n\t\t\t\t<Status\n\t\t\t\tstatus={this.state.status}\n\t\t\t\tstatusColor={this.state.statusColor}\n\t\t\t\t/>\n\t\t\t\t<Joke\n\t\t\t\tjoke={this.state.joke}\n\t\t\t\tpunchline={this.state.punchline}\n\t\t\t\t />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}